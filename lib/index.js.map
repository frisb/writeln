{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["let chalk = require('chalk');\nlet debug = require('debug');\nlet util = require('util');\n\nconst color = {\n\tblack :   0,\n\tred :     1,\n\tgreen :   2,\n\tyellow :  3,\n\tblue :    4,\n\tmagenta : 5,\n\tcyan :    6,\n\twhite :   7\n};\n\ndebug.colors.forEach(function (num, index) {\n\t// remove red\n\tif (num === color.red)\n\t\tdebug.colors.splice(index, 1);\n});\n\ndebug.enable('error warn info debug');\n\nfunction pad(num, len, char) {\n\tif (typeof(num) !== 'string') num = `${num}`;\n\tif (!len) len = 2;\n\tif (num.length >= len)\n\t\treturn num;\n\n\tlet padding = '';\n\n\tlen = len - num.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tpadding += char || '0';\n\t}\n\n\treturn `${padding}${num}`;\n}\n\nfunction dateStr(date, delimiter) {\n\tif (!delimiter)\n\t\tdelimiter = '.';\n\n\treturn date.getFullYear() + delimiter + pad(date.getMonth() + 1) + delimiter + pad(date.getDate());\n}\n\nfunction timeStr(date, delimiter) {\n\tif (!delimiter)\n\t\tdelimiter = ':';\n\n\tlet millisec = date.getMilliseconds();\n\n\tif (millisec < 100)\n\t\tmillisec = '0' + pad(millisec);\n\n\treturn pad(date.getHours()) + delimiter + pad(date.getMinutes()) + delimiter + pad(date.getSeconds()) + delimiter + millisec;\n}\n\n//function colorize(color, text) {\n//\treturn `\\u001b[3${color};1m${text}\\u001b[0m`;\n//}\n\nfunction getColor(level) {\n\tswitch (level) {\n\t\t// case 'info':\n\t\t// \treturn color.cyan;\n\t\t// case 'debug':\n\t\t// \treturn color.green;\n\t\t// case 'warn':\n\t\t// \treturn color.yellow;\n\t\tcase 'error':\n\t\t\treturn color.red;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\n\n// let maxCategoryLength = 0;\n\nlet log = {\n\tdebug: debug('debug'),\n\tinfo: debug('info'),\n\twarn: debug('warn'),\n\terror: debug('error')\n};\n\nclass Writeln {\n\tconstructor(category) {\n\t\tthis.category = category;\n\t\tthis.history = [];\n\t\tthis.category = this.formatCategory();\n\t}\n\n\tinfo(text, metadata) {\n\t\tthis.write('info', text, metadata);\n\t}\n\n\twarn(text, metadata) {\n\t\tthis.write('warn', text, metadata);\n\t}\n\n\tdebug(text, metadata) {\n\t\tthis.write('debug', text, metadata);\n\t}\n\n\terror(text, metadata) {\n\t\tthis.write('error', text, metadata);\n\t}\n\n\twrite(level, text, metadata) {\n\t\tlet now = new Date();\n\t\tlet date = dateStr(now, '-');\n\t\tlet time = timeStr(now);\n\t\tlet timestamp = `${date} ${time}`;\n\t\tlet mtext = '';\n\n\t\tlet color = getColor(level);\n\n\t\tif (color)\n\t\t\tlog.color = color;\n\n\t\tif (metadata) {\n\t\t\tif (typeof(metadata) !== 'string') {\n\t\t\t\tmtext = '\\n' + chalk.dim(util.inspect(metadata, { showHidden: true, depth: null, colors: true })) + '\\n';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmtext = `${metadata}`;\n\t\t\t}\n\n\t\t\tmtext = mtext.replace(/\\n/g, '\\n  ');\n\t\t}\n\n\t\tlog[level](`${chalk.dim(this.category)} ${text}`, chalk.dim(timestamp), mtext);\n\n\t\tthis.history.push(text);\n\t}\n\n\trepeatHistory() {\n\t\tlet str = '';\n\n\t\tfor (let i = 0, len = this.history.length; i < len; i++) {\n\t\t\tstr += this.history[i];\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tformatCategory() {\n\t\tlet str = this.category.replace(/ /g, '-').toLowerCase();\n\t\t// let len = 2 + str.length;\n\t\t//\n\t\t// if (len >= maxCategoryLength) {\n\t\t// \tmaxCategoryLength = len;\n\t\t// }\n\t\t// else {\n\t\t// \tstr += pad('', maxCategoryLength - len, ' ');\n\t\t// }\n\n\t\treturn str;\n\t}\n}\n\nmodule.exports = Writeln;"]}