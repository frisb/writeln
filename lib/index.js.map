{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["let chalk = require('chalk');\nlet debug = require('debug');\nlet util = require('util');\n\nconst color = {\n\tblack :   0,\n\tred :     1,\n\tgreen :   2,\n\tyellow :  3,\n\tblue :    4,\n\tmagenta : 5,\n\tcyan :    6,\n\twhite :   7\n};\n\ndebug.colors.forEach(function (num, index) {\n\t// remove red\n\tif (num === color.red)\n\t\tdebug.colors.splice(index, 1);\n});\n\ndebug.enable('error warn info debug');\n\nfunction pad(num, len, char) {\n\tif (typeof(num) !== 'string') num = `${num}`;\n\tif (!len) len = 2;\n\tif (num.length >= len)\n\t\treturn num;\n\n\tlet padding = '';\n\n\tlen = len - num.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tpadding += char || '0';\n\t}\n\n\treturn `${padding}${num}`;\n}\n\nfunction dateStr(date, delimiter) {\n\tif (!delimiter)\n\t\tdelimiter = '.';\n\n\treturn date.getFullYear() + delimiter + pad(date.getMonth() + 1) + delimiter + pad(date.getDate());\n}\n\nfunction timeStr(date, delimiter) {\n\tif (!delimiter)\n\t\tdelimiter = ':';\n\n\tlet millisec = date.getMilliseconds();\n\n\tif (millisec < 100)\n\t\tmillisec = '0' + pad(millisec);\n\n\treturn pad(date.getHours()) + delimiter + pad(date.getMinutes()) + delimiter + pad(date.getSeconds()) + delimiter + millisec;\n}\n\n//function colorize(color, text) {\n//\treturn `\\u001b[3${color};1m${text}\\u001b[0m`;\n//}\n\nfunction getColor(level) {\n\tswitch (level) {\n\t\t// case 'info':\n\t\t// \treturn color.cyan;\n\t\t// case 'debug':\n\t\t// \treturn color.green;\n\t\t// case 'warn':\n\t\t// \treturn color.yellow;\n\t\tcase 'error':\n\t\t\treturn color.red;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\n\n// let maxCategoryLength = 0;\n\nlet log = {\n\tdebug: debug('debug'),\n\tinfo: debug('info'),\n\twarn: debug('warn'),\n\terror: debug('error')\n};\n\nclass Writeln {\n\tconstructor(category) {\n\t\tthis.category = category;\n\t\tthis.history = [];\n\t\tthis.category = this.formatCategory();\n\t}\n\n\tinfo(text, metadata) {\n\t\tthis.write('info', text, metadata);\n\t}\n\n\twarn(text, metadata) {\n\t\tthis.write('warn', text, metadata);\n\t}\n\n\tdebug(text, metadata) {\n\t\tthis.write('debug', text, metadata);\n\t}\n\n\terror(text, metadata) {\n\t\tthis.write('error', text, metadata);\n\t}\n\n\twrite(level, text, metadata) {\n\t\tlet now = new Date();\n\t\tlet date = dateStr(now, '-');\n\t\tlet time = timeStr(now);\n\t\tlet timestamp = `${date} ${time}`;\n\t\tlet mtext = '';\n\n\t\tlet color = getColor(level);\n\n\t\tif (color)\n\t\t\tlog.color = color;\n\n\t\tif (metadata) {\n\t\t\tif (typeof(metadata) !== 'string') {\n\t\t\t\tmtext = '\\n' + chalk.dim(util.inspect(metadata, { showHidden: true, depth: null, colors: true })) + '\\n';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmtext = `${metadata}`;\n\t\t\t}\n\n\t\t\tmtext = mtext.replace(/\\n/g, '\\n  ');\n\t\t}\n\n\t\tlog[level](`${chalk.dim(this.category)} ${text}`, chalk.dim(timestamp), mtext);\n\n\t\tthis.history.push(text);\n\t}\n\n\trepeatHistory() {\n\t\tlet str = '';\n\n\t\tfor (let i = 0, len = this.history.length; i < len; i++) {\n\t\t\tstr += this.history[i];\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tformatCategory() {\n\t\tlet str = this.category.replace(/ /g, '-').toLowerCase();\n\t\t// let len = 2 + str.length;\n\t\t//\n\t\t// if (len >= maxCategoryLength) {\n\t\t// \tmaxCategoryLength = len;\n\t\t// }\n\t\t// else {\n\t\t// \tstr += pad('', maxCategoryLength - len, ' ');\n\t\t// }\n\n\t\treturn str;\n\t}\n}\n\nmodule.exports = Writeln;"]}